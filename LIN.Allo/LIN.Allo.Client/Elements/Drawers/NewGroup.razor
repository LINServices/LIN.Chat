@inject IJSRuntime js
@rendermode RenderMode.InteractiveWebAssembly


<!-- drawer component -->
<div id="drawerIG-@UniqueId" class="fixed top-0 right-0 z-40 h-screen p-4 overflow-y-auto transition-transform translate-x-full w-80 card-blur" tabindex="-1" aria-labelledby="drawer-right-label">


    <!-- Estado Creando. -->
    @if (ActualState == State.Creating)
    {
        <div class="flex flex-col justify-center items-center h-full">
            <BubbleLoader />
            <label class="text-gray-600">Creando</label>
        </div>
    }

    // Estado correcto.
    else if (ActualState == State.Success)
    {
        <div class="flex flex-col justify-center items-center h-full">
            <img class="h-10 w-10" src="./success.png" />
            <label class="text-gray-600 font-bold text-lg">Creado con éxito</label>
            <label @onclick="Click" class="text-gray-600 text-sm -mt-1">Crear nueva <span class="text-green-500 hover:font-bold">Conversación</span></label>
        </div>
    }

    // Estado fallido.
    else if (ActualState == State.Failure)
    {
        <div class="flex flex-col justify-center items-center h-full">
            <img class="h-10 w-10" src="./error.png" />
            <label class="text-gray-600 font-bold text-lg">Error al crear</label>
            <label @onclick="Click" class="text-gray-600 text-sm -mt-1">Intentar de nuevo crear una <span class="text-red-500 hover:font-bold">Conversación</span></label>
        </div>
    }

    // Estado de entrada.
    else
    {

        <!-- Titulo -->
        <h5 id="drawer-label" class="inline-flex items-center justify-center mb-6 text-base font-bold text-gray-500 dark:text-gray-400">
            Nueva conversación
        </h5>

        <!-- Botón cerrar -->
        <button id="close-drawerIG-@UniqueId" type="button" data-drawer-hide="drawer-form" aria-controls="drawer-form" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 absolute top-2.5 right-2.5 inline-flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white">
            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
            </svg>
            <span class="sr-only">Close menu</span>
        </button>


        <!-- Información -->
        <div class="mb-6">

            <!-- Nombre -->
            <div class="mb-6">
                <label for="title" class="block mb-2 text-sm font-medium text-gray-900 ">Titulo</label>
                <input @bind="Name" type="text" id="title" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-indigo-500 focus:border-indigo-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-indigo-500 dark:focus:border-indigo-500" placeholder="Nombre de la conversación" required>
            </div>

            <!-- Invitados -->
            <div class="mb-4">
                <label for="guests" class="mb-2 text-sm font-medium text-gray-900 sr-only dark:text-white">Invitados</label>
                <div class="relative">
                    <input @bind="        Pattern" type="search" id="guests" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-indigo-500 p-2.5 focus:border-indigo-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-indigo-500 dark:focus:border-indigo-500" placeholder="Agregar usuario" required>
                    <button @onclick="Search" type="button" class="absolute inline-flex items-center px-3 py-1 text-sm font-medium text-white bg-indigo-700 rounded-lg right-2 bottom-2 hover:bg-indigo-800 focus:ring-4 focus:outline-none focus:ring-indigo-300 dark:bg-indigo-600 dark:hover:bg-indigo-700 dark:focus:ring-indigo-800">
                        <svg class="w-3 h-3 mr-1.5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 20 18">
                            <path d="M6.5 9a4.5 4.5 0 1 0 0-9 4.5 4.5 0 0 0 0 9ZM8 10H5a5.006 5.006 0 0 0-5 5v2a1 1 0 0 0 1 1h11a1 1 0 0 0 1-1v-2a5.006 5.006 0 0 0-5-5Zm11-3h-2V5a1 1 0 0 0-2 0v2h-2a1 1 0 1 0 0 2h2v2a1 1 0 0 0 2 0V9h2a1 1 0 1 0 0-2Z" />
                        </svg>Buscar
                    </button>
                </div>
            </div>

            <!-- Imágenes -->
            <div class="flex mb-4 -space-x-4">

                @if (SelectedItems.Count <= 0)
                {
                    <div class="flex rounded justify-center items-center border-dashed border-2 border-gray-800 w-full p-4">
                        <label class="text-gray-700">Sin integrantes</label>
                    </div>
                }
                else
                {
                    foreach (var e in SelectedItems ?? new List<Types.Auth.Abstracts.SessionModel<ProfileModel>>())
                    {
                        <LIN.Allo.Client.Pops.PopUser Modelo="e" OnDelete="OnRemove" />
                    }
                }


            </div>

            <!-- Botón crear -->
            <button @onclick="Crear" type="submit" class="text-white justify-center flex items-center bg-indigo-700 hover:bg-indigo-800 w-full focus:ring-4 focus:ring-indigo-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2  focus:outline-none">
                Crear
            </button>

        </div>


        <!-- Resultados de búsqueda -->
        <div class="@(AreSearch ? "" : "opacity-0")">

            <!-- Esta cargando -->
            @if (IsSearching)
            {
                <div class="flex justify-center items-center">
                    <BubbleLoader />
                </div>
            }

            // Lista de usuarios encontrados.
            else
            {

                // No hay usuarios.
                if ((MemberModels ?? new List<Types.Auth.Abstracts.SessionModel<ProfileModel>>()).Count <= 0)
                {
                    <div class="flex rounded justify-center items-center border-dashed border-2 border-gray-800 w-full p-3">
                        <label class="text-gray-700">No se encontraron usuarios</label>
                    </div>
                }
             
                // Usuarios encontrados.
                else
                {
                    <div class="flex flex-col gap-2">

                        @foreach (var e in MemberModels ?? new List<Types.Auth.Abstracts.SessionModel<ProfileModel>>())
                        {
                            if (!SelectedItems.Where(T => T.Profile.ID == e.Profile.ID).Any() && Access.Communication.Session.Instance.Profile.AccountID != e.Account.ID)
                            {
                                <Profile OnSelect="OnSelect" e="@e" @ref=MemberControl />
                            }
                        }
                    </div>
                }
            }
        </div>
    }

</div>