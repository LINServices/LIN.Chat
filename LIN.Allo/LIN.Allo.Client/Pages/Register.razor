@page "/register"

@rendermode RenderMode.InteractiveWebAssembly
<PageTitle>Nueva cuenta</PageTitle>

@inject NavigationManager nav;


<style>

    .bg-image {
        background-image: url('./img/playa.jpg');
        background-size: cover;
        background-position: center center;
    }

</style>


@code {
    private string usuario = "";
    private string nombre = "";
    private string contraseña = "";

    private bool isLogin = false;
}



@code {

    string conponentsVisible = "v";
    string loaderVisible = "h";
    string errorVisible = "h";

    string errorMessage = "";

}




<div class="grid grid-cols-1 dl:grid-cols-2 min-h-dvh max-h-dvh w-full">


    @* Contenido *@
    <div class="flex items-center justify-center w-full p-3">

        <div class="flex align-items-center w-max">



            @if (isLogin)
            {
                <center>
                    <CircleLoader />
                    <h5 class="mt-2 gilroy-bold text-sm text-gray-600 dark:text-gray-300">Creando tu cuenta</h5>
                </center>
            }
            else
            {

                <div class="relative z-10 flex flex-1 flex-col px-4 py-10 sm:justify-center md:flex-none md:px-28">
                    <div class="mx-auto w-full max-w-md sm:px-4 md:w-96 md:max-w-sm md:px-0">
                        <div class="flex flex-col">

                            @*Nombre*@
                            <div class="flex flex-row items-center">
                                <img class="self-center" src="./chat.png" style="height:30px; width: 30px" />
                                <label class="text-xl self-center ml-3 font-bold dark:text-gray-200">
                                    LIN
                                    <span class="text-transparent bg-clip-text bg-gradient-to-r to-sky-500 from-sky-600">
                                        Account
                                    </span>

                                </label>
                            </div>

                            @*Mensjae de cuenta*@
                            <div class="mt-10">

                                
                                    <h2 class="text-lg font-semibold text-gray-900 dark:text-white">
                                        Registrate en LIN Account
                                    </h2>
                                
                                <p class="mt-2 text-sm text-gray-700  dark:text-gray-300">
                                    Ya tienes una cuenta?@* *@ <a style="text-decoration: none !important;"
                                                                  class="font-medium text-sky-600 hover:text-sky-800"
                                                                  href="/login">Iniciar sesión</a> @* *@para iniciar a disfrutar
                                </p>
                            </div>

                        </div>

                        <div class="mt-6 grid grid-cols-1 gap-4">


                            @*Usuario*@
                            <div class="">
                                <label for="email" class="mb-2 block text-sm font-medium text-gray-700  dark:text-gray-300">
                                    Usuario
                                </label>
                                <input @oninput="HideError" @bind="usuario" type="text" autocomplete="off" required=""
                                       class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-sky-500 focus:bg-white focus:outline-none focus:ring-sky-600 sm:text-sm dark:bg-shark-900 dark:focus:bg-shark-900 dark:text-shark-200 dark:border-shark-700">
                            </div>

                            @*Usuario*@
                            <div class="">
                                <label for="name" class="mb-2 block text-sm font-medium text-gray-700  dark:text-gray-300">
                                    Nombre
                                </label>
                                <input @oninput="HideError" @bind="nombre" type="text" autocomplete="off" required=""
                                       class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-sky-500 focus:bg-white focus:outline-none focus:ring-sky-600 sm:text-sm dark:bg-shark-900 dark:focus:bg-shark-900 dark:text-shark-200 dark:border-shark-700">
                            </div>


                                @*Contraseña*@
                                <div class="">
                                    <label class="mb-2 block text-sm font-medium text-gray-700 dark:text-gray-300">Contraseña</label>
                                    <input  @oninput="HideError"
                                           @bind="contraseña" type="password"
                                           autocomplete="off"
                                           class="block w-full appearance-none rounded-md border border-gray-200 bg-gray-50 px-3 py-2 text-gray-900 placeholder-gray-400 focus:border-sky-500 focus:bg-white focus:outline-none focus:ring-sky-600 sm:text-sm dark:bg-shark-900 dark:focus:bg-shark-900 dark:text-shark-200 dark:border-shark-700">
                                </div>




                            <center class="@errorVisible" style="margin-bottom: -10px;">
                                <label class="text-red-500 gilroy-bold text-sm">@errorMessage</label>
                            </center>

                            @*Boton*@
                            <div class="flex flex-row mt-4">


                                <button @onclick="Start"
                                        class="group inline-flex items-center justify-center rounded-full py-2 px-4 text-sm font-semibold focus:outline-none focus-visible:outline-2 focus-visible:outline-offset-2 bg-sky-600 text-white hover:text-slate-100 hover:bg-sky-800 active:bg-sky-800 active:text-sky-100 focus-visible:outline-sky-600 w-full">
                                    <span>Crear <span aria-hidden="true">→</span></span>
                                </button>

                               


                            </div>


                            

                        </div>
                    </div>
                </div>

            }


        </div>

    </div>


    @* Imagen *@
    <div class="hidden dl:block dl:w-full rounded-lg p-3">

        <div class="w-full h-full bg-image rounded-lg">
        </div>

    </div>


</div>

























@code {


    /// <summary>
    /// Hace visisbles los controles
    /// </summary>
    void ShowControls()
    {
        isLogin = false;
        conponentsVisible = "v";
        loaderVisible = "h";
        StateHasChanged();
    }


    /// <summary>
    /// Oculta los controles
    /// </summary>
    void HideControls()
    {
        isLogin = true;
        conponentsVisible = "h";
        loaderVisible = "v";
        StateHasChanged();
    }


    /// <summary>
    /// Oculta los errores
    /// </summary>
    void HideError()
    {
        errorVisible = "h";
        StateHasChanged();
    }


    /// <summary>
    /// Muestra un mensaje
    /// </summary>
    void ShowError(string message)
    {
        errorVisible = "v";
        errorMessage = message;
        StateHasChanged();
    }





    /// <summary>
    /// Inicia sesion
    /// </summary>
    async void Start()
    {

        HideControls();
        HideError();

        // Sin informacion
        if (usuario.Length <= 0 || contraseña.Length <= 0 || nombre.Length <= 0)
        {
            ShowControls();
            ShowError("Completa todos los campos");
            return;
        }

        // Sin informacion
        if (contraseña.Length < 4)
        {
            ShowControls();
            ShowError("La contraseña debe tener mas de 4 dígitos");
            return;
        }




        // Model
        AccountModel modelo = new()
            {
                Name = nombre,
                Identity= new()
                {
                    Unique = usuario
                },
                Password = contraseña
            };

        // Creacion
        var res = await LIN.Access.Auth.Controllers.Account.Create(modelo);


        // Respuesta
        switch (res.Response)
        {

            case Responses.Success:
                break;

            case Responses.NotConnection:
                ShowControls();
                ShowError("Error de conexion");
                return;

            case Responses.ExistAccount:
                ShowControls();
                ShowError($"Ya existe un usuario con el nombre '{usuario}'");
                return;

            default:
                ShowControls();
                ShowError($"Hubo un error grave");
                return;
        }

       var response = await Access.Communication.Session.LoginWith(res.Token);


        if (response.Response == Responses.Success)
        {
            nav.NavigateTo("/");
            //await localStorage.SetItemAsync("token", res.Token);
            //Online.StaticHub.LoadHub();
        }
        else
        {
            ShowControls();
            ShowError($"Hubo un error al iniciar sesion");
            return;
        }



    }
}