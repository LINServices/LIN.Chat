@code {

    [Parameter]
    public Types.Auth.Abstracts.SessionModel<MemberChatModel>? e { get; set; } = null;


    public IsOnlineResult? isOnline = null;


    private string Img64 => Convert.ToBase64String(e.Account.Perfil);




    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }


    public void Con()
    {
        Confirm(e.Profile.Profile.ID);
    }


}

<div @onclick="() => Confirm(e.Profile.Profile.ID)" class="flex shadow hover:shadow-gray-400 hover:shadow-lg b rounded-lg w-full mt-3">


    <div class="flex p-3 w-full items-center">


        <div class="relative">
            <img class="w-7 h-7 mr-2 p-1 rounded-full ring-2 ring-gray-400" src="data:image/png;base64,@Img64" alt="Bordered avatar">

            @if (isOnline != null && isOnline.IsOnline)
            {
                <span class="bottom-0 left-4 absolute w-3 h-3 bg-green-500 border-2 rounded-full"></span>
            }
            else if (isOnline != null && isOnline.LastTime != default)
            {
                <span class="bottom-0 left-4 absolute w-3 h-3 bg-orange-500 border-2 rounded-full"></span>
            }
            else
            {
                <span class="bottom-0 left-4 absolute w-3 h-3 bg-red-500 border-2 rounded-full"></span>
            }


        </div>


        <div class="flex flex-col">

            <label class="text-sm font-bold">@e.Profile.Profile.Alias</label>


            @if (e.Profile.Rol == Types.Communication.Enumerations.MemberRoles.Admin)
            {
                <label class="text-xs">Administrador</label>
            }
            else
            {
                <label class="text-xs">Integrante</label>
            }

        </div>

    </div>


    <div class="flex justify-end items-center mr-3 hover:cursor-pointer">
        <span class="inline-flex justify-center items-center bg-red-100 hover:bg-red-200 text-red-800 hover:text-red-950 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full w-28">
            <span class="w-2 h-2 mr-1 bg-red-500 rounded-full"></span>
            @(e.Account.ID == Access.Communication.Session.Instance.Account.ID ? "Salir" : "Expulsar")
        </span>
    </div>


</div>


@code {


    async void Confirm(int id)
    {
        var x = await Access.Communication.Controllers.Conversations.IsOnline(id);
        isOnline = x.Model;
        StateHasChanged();
    }

}