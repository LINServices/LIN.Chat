@code {

    [Parameter]
    public Types.Cloud.Identity.Abstracts.SessionModel<ProfileModel>? e { get; set; } = null;


    public IsOnlineResult? isOnline = null;


    private string Img64 => Convert.ToBase64String(e.Account.Profile);

    [Parameter]
    public int State { get; set; } = 1;

    [Parameter]
    public Action<SessionModel<ProfileModel>> OnSelect { get; set; } = (e) =>
    {
        Console.WriteLine("None");
    };

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }


    public void Con()
    {
        Confirm(e.Profile.ID);
    }


}


<div @onclick="() => Confirm(e.Profile.ID)" class="flex hover:bg-gray-100/25 rounded-lg w-full mt-2">


    <div class="flex p-3 w-full items-center">


        <div class="relative">
            <img class="w-9 h-9 mr-2 p-1 rounded-full ring-2 ring-gray-400" src="data:image/png;base64,@Img64" alt="Bordered avatar">

        </div>


        <div class="flex flex-col">

            <label class="text-sm font-bold">@e.Profile.Alias</label>


                <label class="text-xs text-gray-800">@@@e.Account.Identity.Unique</label>
          
        </div>

    </div>

    @if (State == 1)
    {
        <div @onclick="() => OnSelect(e)" class="flex justify-end items-center mr-3 hover:cursor-pointer">
            <span class="inline-flex justify-center items-center bg-green-100 hover:bg-green-200 text-green-800 hover:text-green-950 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full w-28">
                <span class="w-2 h-2 mr-1 bg-green-500 rounded-full"></span>
            Agregar
        </span>
    </div>
    }
    else if (State == 2)
    {
        <div @onclick="() => OnSelect(e)" class="flex justify-end items-center mr-3 hover:cursor-pointer">
            <span class="inline-flex justify-center items-center bg-red-100 hover:bg-red-200 text-red-800 hover:text-red-950 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full w-28">
                <span class="w-2 h-2 mr-1 bg-red-500 rounded-full"></span>
               Remover
            </span>
        </div>
    }

   


</div>

















@code {


    async void Confirm(int id)
    {
        var x = await Access.Communication.Controllers.Conversations.IsOnline(id, LIN.Access.Communication.Session.Instance.Token);
        isOnline = x.Model;
        StateHasChanged();
    }

}