@inject IJSRuntime js
@attribute [RenderModeInteractiveWebAssembly]

@code {


    State ActualState = State.Witting;


    enum State
    {
        Witting,
        Responding,
    }


    [Parameter]
    public int ID { get; set; }


    [Parameter]
    public string Name { get; set; }



    [Parameter]
    public Action OnSuccess { get; set; }



    public async void Show()
    {
        var ss = ID;
        await js.InvokeAsync<object>("ShowDrawer", $"drawerEmma-{ID}", $"close-drawerEmma-{ID}");


        base.StateHasChanged();
    }


    string Prompt = "";



    string EmmaResponde = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    async void ToEmma()
    {

        ActualState = State.Responding;
        StateHasChanged();

        var s = await LIN.Access.Communication.Controllers.Messages.ToEmma(Prompt, LIN.Access.Communication.Session.Instance.Token);
        Console.WriteLine(s.Model.Content);


        ActualState = State.Witting;

        // Es un comando
        if (s.Model.Content.StartsWith("#"))
        {
            var app = new SILF.Script.App(s.Model.Content.Remove(0, 1));
           // app.AddDefaultFunctions(Online.Scripts.Actions);
            app.Run();
            EmmaResponde = "Perfecto";
            StateHasChanged();
            return;
        }

        EmmaResponde = s.Model.Content;
        // Hablar
        StateHasChanged();

        await js.InvokeVoidAsync("Speach", s.Model.Content);
    }



    void StartEmma()
    {
        js.InvokeVoidAsync("StartVoice", DotNetObjectReference.Create(this));
    }

    [JSInvokable("OnEmma")]
    public async void OnEmma(string value)
    {
        Prompt = value;
        StateHasChanged();
        ToEmma();
    }



}

<style>
    .card {
        backdrop-filter: blur(25px) saturate(200%);
        -webkit-backdrop-filter: blur(25px) saturate(200%);
        background-color: rgba(255, 255, 255, 0.59);
    }

</style>


<!-- drawer component -->
<div id="drawerEmma-@ID" class="fixed top-0 right-0 z-40 h-screen p-4 overflow-y-auto transition-transform translate-x-full w-80 card" tabindex="-1" aria-labelledby="drawer-right-label">


    
        <button id="close-drawerEmma-@ID" type="button" data-drawer-hide="drawer-form" aria-controls="drawer-form" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 absolute top-2.5 right-2.5 inline-flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white">
            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
            </svg>
            <span class="sr-only">Close menu</span>
        </button>



        <div class="w-full flex flex-col justify-center items-center mt-5 mb-4">
            <img src="./arroba.png" class="h-14 w-14" />
            <label class="font-bold">Emma Assistant</label>
            <label class="flex items-center text-gray-600 text-xs mt-1">Con tecnología de OpenIA <img class="ml-1 h-2 w-2" src="./openIA.png"></label>
        </div>


        <div class="mb-6">

            @if (ActualState == State.Witting)
            {
            <label>@EmmaResponde</label>
           
             <div class="mb-4 mt-3">

                <div>
                    <label for="chat" class="sr-only">Your message</label>
                    <div class="flex items-center px-3 py-2 rounded-lg bg-gray-50 dark:bg-gray-700">

                        <textarea @bind="Prompt" id="message" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Write your thoughts here..."></textarea>
                        
                        <button @onclick="ToEmma" type="submit" class="inline-flex justify-center p-2 text-blue-600 rounded-full cursor-pointer hover:bg-blue-100 dark:text-blue-500 dark:hover:bg-gray-600">
                            <svg class="w-5 h-5 rotate-90" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="currentColor" viewBox="0 0 18 20">
                                <path d="m17.914 18.594-8-18a1 1 0 0 0-1.828 0l-8 18a1 1 0 0 0 1.157 1.376L8 18.281V9a1 1 0 0 1 2 0v9.281l6.758 1.689a1 1 0 0 0 1.156-1.376Z" />
                            </svg>
                            <span class="sr-only">Send message</span>
                        </button>
                    </div>
                </div>

            </div>
        }
        else
        {
            <CircleLoader></CircleLoader>
        }



    </div>


</div>

