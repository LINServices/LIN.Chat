@page "/"
@inject NavigationManager nav


@if (!LIN.Access.Communication.Session.IsOpen)
{
    nav.NavigateTo("/login");
}



@code {

    class A
    {
        public bool IsLoad {get;set;}
    }

    Dictionary<int, (LIN.Access.Communication.Hubs.ChatHub, MemberChatModel, A)> Chats = new();


    Shared.ChatSection ChatPage { get; set; }















    int Me = 0;
    int Other = 0;
    string Alias = "";


    List<MemberChatModel> ConversaciónModels = new();



    protected override async Task OnInitializedAsync()
    {

        var s = LIN.Access.Communication.Session.Instance;
        var token = LIN.Access.Communication.Session.Instance.Token;
        var o = await LIN.Access.Communication.Controllers.Conversations.ReadAll(token);


        if (o.Response != Responses.Success)
            return; 

        ConversaciónModels = o.Models;

        var hub = new LIN.Access.Communication.Hubs.ChatHub();
        await hub.Suscribe();
        await hub.ConnectMe(LIN.Access.Communication.Session.Instance.Informacion);

        foreach (var e in ConversaciónModels)
        {

            e.Profile = LIN.Access.Communication.Session.Instance.Informacion;
            e.Conversation.Mensajes ??= new();

            hub.JoinGroup(e.Conversation.ID.ToString(), (MessageModel message) =>
            {

                e.Conversation.Mensajes.Add(message);
                if (ChatPage?.Iam.Conversation.ID == e.Conversation.ID)
                    ChatPage?.Render();

            });

            Chats.Add(e.Conversation.ID, (hub, e, new() { IsLoad= false }));
        }


        await base.OnInitializedAsync();
    }









    LIN.Access.Communication.Hubs.ChatHub ActualHub { get; set; }
    MemberChatModel Member { get; set; }



    async void Select(MemberChatModel c)
    {

        var info = Chats.Where(T => T.Key == c.Conversation.ID).FirstOrDefault();

        ActualHub = info.Value.Item1;
        Member = info.Value.Item2;

        if (!info.Value.Item3.IsLoad)
        {
            var oldMessage = await LIN.Access.Communication.Controllers.Messages.ReadAll(Member.Conversation.ID);

            Member.Conversation.Mensajes.AddRange(oldMessage.Models);
            info.Value.Item3.IsLoad = true;
        }


        base.StateHasChanged();

    }


}


<div>
    <div class="w-full h-32" style="background-color: #449388"></div>

    <div class="w-full" style="margin-top: -128px;">
        <div class="h-screen">
            <div class="flex flex-col lg:flex-row h-full">

                <!-- Left -->
                <div class="w-full lg:w-1/3 flex flex-col">

                    <!-- Header -->
                    <div class="py-2 px-3 bg-indigo-950 flex flex-row justify-between items-center">
                        <div>
                            <img class="w-10 h-10 rounded-full" src="http://andressantibanez.com/res/avatar.png" />
                        </div>

                        <div class="flex">
                            <div>
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="#727A7E" d="M12 20.664a9.163 9.163 0 0 1-6.521-2.702.977.977 0 0 1 1.381-1.381 7.269 7.269 0 0 0 10.024.244.977.977 0 0 1 1.313 1.445A9.192 9.192 0 0 1 12 20.664zm7.965-6.112a.977.977 0 0 1-.944-1.229 7.26 7.26 0 0 0-4.8-8.804.977.977 0 0 1 .594-1.86 9.212 9.212 0 0 1 6.092 11.169.976.976 0 0 1-.942.724zm-16.025-.39a.977.977 0 0 1-.953-.769 9.21 9.21 0 0 1 6.626-10.86.975.975 0 1 1 .52 1.882l-.015.004a7.259 7.259 0 0 0-5.223 8.558.978.978 0 0 1-.955 1.185z"></path></svg>
                            </div>
                            <div class="ml-4">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path opacity=".55" fill="#263238" d="M19.005 3.175H4.674C3.642 3.175 3 3.789 3 4.821V21.02l3.544-3.514h12.461c1.033 0 2.064-1.06 2.064-2.093V4.821c-.001-1.032-1.032-1.646-2.064-1.646zm-4.989 9.869H7.041V11.1h6.975v1.944zm3-4H7.041V7.1h9.975v1.944z"></path></svg>
                            </div>
                            <div class="ml-4">
                                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="24" height="24"><path fill="#263238" fill-opacity=".6" d="M12 7a2 2 0 1 0-.001-4.001A2 2 0 0 0 12 7zm0 2a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 9zm0 6a2 2 0 1 0-.001 3.999A2 2 0 0 0 12 15z"></path></svg>
                            </div>
                        </div>
                    </div>

                    <!-- Search -->
                    <div class="py-2 px-2 bg-indigo-950">

                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                                <svg class="w-4 h-4 text-gray-500 dark:text-gray-400" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
                                    <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z" />
                                </svg>
                            </div>
                            <input type="search" id="search" class="block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500" placeholder="Nueva conversacion con:" required>
                            <button type="submit" class="text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 dark:bg-blue-600 dark:hover:bg-blue-700 dark:focus:ring-blue-800">Buscar</button>
                        </div>

                    </div>

                    <!-- Contacts -->
                    <div class="bg-white flex-1 overflow-auto">

                        <!--Componente: Chat Selector-->
                        @foreach (var aa in ConversaciónModels)
                        {
                            <div @onclick="()=>Select(aa)" class="bg-white px-3 flex items-center hover:bg-grey-lighter cursor-pointer bottom-2 m-3 ring-1 ring-gray-300 hover:ring-blue-600 rounded">
                                <div>
                                    <img class="h-10 w-10 rounded-full"
                                         src="./group (2).png" />
                                </div>
                                <div class="ml-4 flex-1 py-4">
                                    <div class="flex items-bottom justify-between">
                                        <label class="text-gray-800 gilroy-bold">
                                            @aa.Conversation.Name
                                        </label>
                                        <label class="text-xs text-gray-600">
                                            @aa.Conversation.Mensajes.LastOrDefault()?.Time.ToString("hh:mm")
                                        </label>
                                    </div>
                                    <p class="text-gray-600 text-xs" style="margin-top: -4px">
                                       @aa.Conversation.Mensajes.LastOrDefault()?.Contenido
                                    </p>
                                </div>
                            </div>
                        }

                    </div>

                </div>

                <!-- Right -->
                <div class="w-full lg:w-2/3 flex flex-col bg-indigo-50">

                    @if (ActualHub != null && Member != null)
                    {
                        <LIN.Chat.Client.Shared.ChatSection @ref="ChatPage" Iam="Member" Hub="ActualHub" />
                    }


                </div>

            </div>
        </div>
    </div>
</div>

















