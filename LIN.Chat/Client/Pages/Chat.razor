@page "/"
@inject NavigationManager nav

@inject IJSRuntime JSRuntime

@code {


    /// <summary>
    /// Sección grafica actual.
    /// </summary>
    private int ActualSection { get; set; } = 0;


    /// <summary>
    /// Imagen de perfil en base64
    /// </summary>
    private string Img64 => Convert.ToBase64String(LIN.Access.Communication.Session.Instance.Account.Perfil);

    NewGroup newGroupModal;


    void OpenNew()
    {
        newGroupModal.Show();
    }

    private async Task E()
    {

        await JSRuntime.InvokeAsync<object>("E");

        base.StateHasChanged();

    }

    private void Close()
    {
        nav.NavigateTo("/logout");
    }
}

<NewGroup OnSuccess="ForceRetrieveData" @ref="newGroupModal"></NewGroup>

<div>
    <div class="w-full h-32" style="background-color: #F8F7FB"></div>

    <div class="w-screen" style="margin-top: -128px;">
        <div class="h-screen">
            <div class="flex flex-row h-full gap-1">

                <!-- Left -->
                <div class="w-full lg:w-1/3 flex @(ActualSection != 0 ? "hidden lg:flex":"") flex-col">

                    <!-- Header -->
                    <div class="px-5 pt-3 pb-1 flex flex-row justify-between items-center border-r" style="background-color: #F8F7FB">
                        <div class="flex items-center">

                            <button @onclick="E" type="button" class="flex bg-white text-sm rounded-full focus:ring-4 focus:ring-gray-300" id="user-menu-button">
                                <span class="sr-only">Open</span>
                                <img class="w-8 h-8 p-1 rounded-full ring-2 ring-gray-300" src="data:image/png;base64,@Img64">
                            </button>

                            <div class="flex flex-col">
                                <label class="ml-3 text-sm gilroy-bold">@LIN.Access.Communication.Session.Instance.Account.Nombre</label>
                                <label class="ml-3 text-xs gilroy" style="margin-top:-3px">@LIN.Access.Communication.Session.Instance.Informacion.Alias</label>
                            </div>




           



                        </div>














                        <div class="flex justify-center items-center">
                            <div>
                                <img @onclick="OpenNew" class="h-5 w-5" src="./add.png" />
                            </div>

                        </div>
                    </div>

                    <!-- Contacts -->
                    <div class="flex-1 overflow-auto border-r" style="background-color: #F8F7FB">

                        <div class="px-5 mt-4">

                            <label class="text-base gilroy-bold text-gray-800">Conversaciones</label>


                            @if(IsConversationsLoad)
                            {
                                foreach (var member in ConversaciónModels)
                                {
                                    <Control Member="member" @ref="ComponentRef" OnClick="Select" />
                                }
                            }
                            else
                            {
                                <div class="flex w-full justify-center mt-2">
                                    <CircleLoader />
                                </div>
                            }

                           
                        </div>
                    </div>

                </div>

                <!-- Right -->
                <div class="w-full @(ActualSection != 1 ? "hidden lg:flex":"") lg:w-2/3 flex flex-col" style="background-color: #F8F7FB">

                    @if (ChatSection.Hub != null && Member != null)
                    {
                        <ChatSection @ref="ChatPage" Iam="Member" OnBackPress="()=>{
                                ActualSection = 0;
                                Member = null;
                                foreach (var c in ComponentRefs)
                                     c.Unselect();

                                base.StateHasChanged();
                                }" />
                    }
                    else
                    {

                        <div class="flex flex-col h-full w-full items-center justify-center">

                            <img class="h-56 w-56" src="./chatdraw.svg" />
                            <label class="text-3xl gilroy-bold">Bienvenido a LIN Chat</label>
                            <label class="text-gray-600 mt-1">Puedes usar LIN Chat y los servicios asociados en tu dispositivo <span class="text-blue-600">Windows</span> o <span class="text-green-500">Android</span> </label>
                        </div>
                      
                    }


                </div>

            </div>
        </div>
    </div>
</div>


<!-- Dropdown menu -->
<div class="z-50 hidden w-60 text-base list-none bg-white divide-y divide-gray-100 rounded-lg shadow my-10" id="user-dropdown">

    <div class="px-4 py-3 flex flex-col justify-center items-center">


        <button type="button" class="flex mr-3 mt-1 text-sm rounded-full md:mr-0 focus:ring-4 focus:ring-gray-300" id="user-menu-button">
            <span class="sr-only">Open</span>
            <img class="w-12 h-12 p-1 rounded-full ring-2 ring-gray-300" src="data:image/png;base64,@Img64">
        </button>


        <div class="flex flex-row items-center mt-1">
            <span class="block text-sm text-gray-900">Hola, @LIN.Access.Communication.Session.Instance.Account.Nombre</span>
        </div>

        <div class="flex flex-row items-center">

            <span class="block text-sm text-gray-500 truncate">@@@LIN.Access.Communication.Session.Instance.Account.Usuario</span>

            @if (LIN.Access.Communication.Session.Instance.Account.Insignia == AccountBadges.Verified)
            {
                <img class="ml-1 self-center" src="./img/verificado.png" style="width: 10px !important; height: 10px !important" />
            }
            else if (LIN.Access.Communication.Session.Instance.Account.Insignia == AccountBadges.VerifiedGold)
            {
                <img class="ml-1 self-center" src="./img/verificadogold.png" style="width: 10px !important; height: 10px !important" />
            }

        </div>


        @if (LIN.Access.Communication.Session.Instance.Account.Rol != AccountRoles.Undefined)
        {
            <div class="h-6 bg-blue-600 rounded-xl flex items-center justify-center hover:bg-blue-300 mt-2">

                @if (LIN.Access.Communication.Session.Instance.Account.Rol == AccountRoles.User)
                {
                    <label class="text-xs text-white pl-3 pr-3">Usuario</label>
                }
                else if (LIN.Access.Communication.Session.Instance.Account.Rol == AccountRoles.Admin)
                {
                    <label class="text-xs text-white pl-3 pr-3">Administrador</label>
                }

            </div>
        }


    </div>


    <div class="px-4 py-3 flex flex-row justify-center items-center">

        <button class="bg-transparent h-7 w-7 rounded-lg hover:bg-gray-100 p-1 hover:p-2">
            <img src="img/Products/chat.png" />
        </button>

        @if (LIN.Access.Communication.Session.Instance.Account.OrganizationAccess != null)
        {
            <button class="bg-transparent h-7 w-7 rounded-lg hover:bg-gray-100 p-1 hover:p-2">
                <img src="img/Products/empresa.png" />
            </button>
        }


        <button class="bg-transparent h-7 w-7 rounded-lg hover:bg-gray-100 p-1 hover:p-2">
            <img src="img/map.png" />
        </button>

        <button class="bg-transparent h-7 w-7 rounded-lg hover:bg-gray-100 p-1 hover:p-2">
            <img src="img/cloud.png" />
        </button>

        <button class="bg-transparent h-7 w-7 rounded-lg hover:bg-gray-100 p-1 hover:p-2">
            <img src="img/box.png" />
        </button>

        <button class="bg-transparent h-7 w-7 rounded-lg hover:bg-gray-100 p-1 hover:p-2">
            <img src="img/products/calendar.png" />
        </button>

        <button class="bg-transparent h-7 w-7 rounded-lg hover:bg-gray-100 p-1 hover:p-2">
            <img src="img/contactos.png" />
        </button>

    </div>

    <ul class="py-2" aria-labelledby="user-menu-button">
        <li>
            <a href="/" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Tablero</a>
        </li>
        <li>
            <a href="/settings" class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Configuración</a>
        </li>

        <li @onclick="Close">
            <a class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100">Cerrar sesión</a>
        </li>

    </ul>
</div>

