@page "/"
@inject NavigationManager nav


@if (!LIN.Access.Communication.Session.IsOpen)
{
    nav.NavigateTo("/login");
}


<style>
    .chat {
        display: grid;
        grid-template-columns: repeat(2,minmax(0,1fr));
        column-gap: .75rem;
        padding-top: .25rem;
        padding-bottom: .25rem;
    }

    .chat-end {
        place-items: end;
        grid-template-columns: 1fr auto;
    }
    .chat-start {
        place-items: start;
        grid-template-columns: auto 1fr;
    }
    .chat-start .chat-bubble {
        grid-column-start: 2;
        border-bottom-left-radius: 0;
    }

    .chat-end .chat-bubble {
        grid-column-start: 1;
        border-bottom-right-radius: 0;
    }

    .chat-bubble {
        position: relative;
        display: block;
        width: -moz-fit-content;
        width: fit-content;
        padding: .5rem 1rem;
        max-width: 90%;
        border-radius: var(--rounded-box,1rem);
        min-height: 2.75rem;
        min-width: 2.75rem;
        --tw-bg-opacity: 1;
        background-color: #1e293b;
        --tw-text-opacity: 1;
        color: white;
    }
</style>

@code{
    int Me = 0;
    int Other = 0;
    string Alias = "";


    List<MemberChatModel> ConversaciónModels = new();

    Dictionary<int, (LIN.Access.Communication.Hubs.ChatHub, MemberChatModel)> Dict = new();

    protected override async Task OnInitializedAsync()
    {

        var token = LIN.Access.Communication.Session.Instance.Token;
        var o = await LIN.Access.Communication.Controllers.Profile.ReadConver(token);

        ConversaciónModels = o.Models;


        foreach (var e in ConversaciónModels)
        {

            e.Profile = LIN.Access.Communication.Session.Instance.Informacion;
            e.Conversation.Mensajes ??= new();
            var hub = new LIN.Access.Communication.Hubs.ChatHub();
            await hub.Suscribe();
            await hub.ConnectMe(e.Profile);
            hub.JoinGroup(e.Conversation.ID.ToString());
        
            

            Dict.Add(e.Conversation.ID, (hub ,e));
        }


        await  base.OnInitializedAsync();
    }


    LIN.Access.Communication.Hubs.ChatHub ActualHub { get; set; }
    MemberChatModel Member { get; set; }



    void Select(MemberChatModel c)
    {

        var info = Dict.Where(T => T.Key == c.Conversation.ID).FirstOrDefault();

        ActualHub = info.Value.Item1;
        Member = info.Value.Item2;

        base.StateHasChanged();


    }


}

<div class="layoutMain h-full">


    <label class="text-3xl gilroy-bold mt-2">Hola, @LIN.Access.Communication.Session.Instance.Informacion.Alias</label>

    <div class="mt-10">

    @foreach(var aa in ConversaciónModels)
        {
            <div @onclick="()=>Select(aa)" class="flex flex-col bg-gray-200 rounded">
                <label>@aa.Conversation.Name</label>
            </div>
        }

    </div>



    <div class="mt-10">


        @if (ActualHub != null && Member != null)
        {
            <LIN.Chat.Client.Shared.ChatSection Iam="Member" Hub="ActualHub" />
        }

       
    </div>
 


</div>