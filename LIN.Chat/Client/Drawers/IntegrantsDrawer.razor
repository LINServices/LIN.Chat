@inject IJSRuntime js

@code{

    [Parameter]
    public int ID { get; set; }


    [Parameter]
    public string Name { get; set; }


    private List<Types.Auth.Abstracts.SessionModel<MemberChatModel>> Members { get; set; }



    List<LIN.Allo.Client.Shared.Member> membersControls = new();

    public LIN.Allo.Client.Shared.Member MemberC {
        set
        {
            membersControls.Add(value);
        } 
    }


    public async void Show()
    {
        var ss = ID;
        await js.InvokeAsync<object>("ShowDrawer", $"drawer-{ID}", $"close-drawer-{ID}");

        foreach (var m in membersControls)
            m.Con();

        base.StateHasChanged();
    }


    bool IsLoad = false;



    protected override void OnInitialized()
    {
        base.OnInitialized();
    }


    protected async override Task OnAfterRenderAsync(bool firstRender)
    {

        if (!IsLoad)
        {
            var result = await LIN.Access.Communication.Controllers.Conversations.MembersInfo(ID, LIN.Access.Communication.Session.Instance.AccountToken);

            Members = result.Models;
            IsLoad = true;
            base.StateHasChanged();
        }
       

       base.OnAfterRenderAsync(firstRender);
    }



}

<style>
    .card {
        backdrop-filter: blur(25px) saturate(200%);
        -webkit-backdrop-filter: blur(25px) saturate(200%);
        background-color: rgba(255, 255, 255, 0.59);
    }

</style>



<!-- drawer component -->
<div id="drawer-@ID" class="fixed top-0 right-0 z-40 h-screen p-4 overflow-y-auto transition-transform translate-x-full card" tabindex="-1" aria-labelledby="drawer-right-label">
    
    <div class="flex items-center justify-center w-full">

        <h5 id="drawer-right-label" class="self-center gilroy-bold">
            @Name
        </h5>

        <button id="close-drawer-@ID" type="button" data-drawer-hide="drawer-right-example" aria-controls="drawer-right-example" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm w-8 h-8 absolute top-2.5 right-2.5 inline-flex items-center justify-center dark:hover:bg-gray-600 dark:hover:text-white">
            <svg class="w-3 h-3" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 14">
                <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 1 6 6m0 0 6 6M7 7l6-6M7 7l-6 6" />
            </svg>
            <span class="sr-only">Close menu</span>
        </button>

    </div>

    <div class="flex items-center justify-center w-full">
    <label class="text-xs text-gray-500">Integrantes</label>
    </div>

    <div class="flex justify-center items-center mt-2 gap-2">
        <img class="h-5 w-5 hover:opacity-25" src="./plus.png" />
        <img class="h-5 w-5 hover:opacity-25" src="./trash-bin.png" />
        <img class="h-5 w-5 hover:opacity-25" src="./write.png" />
    </div>
   

    
    <div>
        @foreach (var e in Members ?? new List<Types.Auth.Abstracts.SessionModel<MemberChatModel>>())
        {
           <Member e="@e" @ref=MemberC/>
        }
    </div>


</div>

