
@code{


    [Parameter]
    public int OtherID { get; set; }


    [Parameter]
    public ProfileModel Me { get; set; }



    public LIN.Access.Communication.Hubs.ChatHub Hub { get; set; }


    private string OtherClass = "chat chat-start";
    private string MeClass = "chat chat-end";


    public List<MessageModel> Messages = new();

    private string Message { get; set; } = "";


    protected async override void OnParametersSet()
    {

        Hub = new();
        await Hub.Suscribe();
        await Hub.ConnectMe(Me);

        Hub.JoinGroup(Me.ID, OtherID);

        Hub.OnReceivingMessage += ChatHub_OnReceivingMessage;

        base.OnParametersSet();
    }


    private void SendMessage()
    {
        Hub.SendMessage(Me.ID, OtherID, Message);
    }


    private void ChatHub_OnReceivingMessage(object? sender, (int, string, string) e)
    {

        Messages.Add(new()
            {
                Contenido = e.Item3,
                Remitente = new()
                {
                    ID = e.Item1,
                    Alias = e.Item2
                }
            });

            base.StateHasChanged();

    }


}

<div class="h-full w-full">


  
    <div class="flex flex-col w-96 bg-gray-100">


        @foreach(var message in Messages)
        {
            <div class="@OtherClass">
                <div class="chat-bubble">@message.Remitente.Alias: @message.Contenido</div>
            </div>
        }

    </div>


    <input @bind="Message" placeholder="message" />
    <button @onclick="SendMessage">Enviar</button>


</div>