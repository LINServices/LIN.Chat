@code {

    [Parameter]
    public Types.Auth.Abstracts.SessionModel<MemberChatModel>? e { get; set; } = null;


    public IsOnlineResult? isOnline = null;


    private string Img64 => Convert.ToBase64String(e.Account.Perfil);




    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }


    public void Con()
    {
        Confirm(e.Profile.Profile.ID);
    }


}


<div @onclick="()=>Confirm(e.Profile.Profile.ID)" class="flex shadow-lg hover:shadow-indigo-100 bg-white rounded-lg w-full mt-3">


    <div class="flex p-3 w-full items-center">


        <img class="w-7 h-7 mr-2 p-1 rounded-full ring-2 ring-gray-300 dark:ring-gray-500" src="data:image/png;base64,@Img64" alt="Bordered avatar">

        <div class="flex flex-col">

            <label class="text-sm font-bold">@e.Profile.Profile.Alias</label>


            @if (e.Profile.Rol == Types.Communication.Enumerations.MemberRoles.Admin)
            {
                <label class="text-xs">Administrador</label>
            }
            else
            {
                <label class="text-xs">Integrante</label>
            }

        </div>

    </div>

    @if (isOnline != null && isOnline.IsOnline)
    {
        <div class="flex justify-end items-center mr-3">
            <span class="flex justify-center items-center bg-green-100 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-green-900 dark:text-green-300 w-28">
                <span class="w-2 h-2 mr-1 bg-green-500 rounded-full"></span>
                Conectado
            </span>
        </div>
    }
    else if (isOnline != null && isOnline.LastTime != default)
    {
        <div class="flex justify-end items-center mr-3">
            <span class="inline-flex justify-center items-center bg-orange-100 text-orange-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full w-28">
                <span class="w-2 h-2 mr-1 bg-orange-500 rounded-full"></span>
                @(isOnline!.LastTime.ToString("G"))
            </span>
        </div>
    }
    else
    {
        <div class="flex justify-end items-center mr-3">
            <span class="inline-flex justify-center items-center bg-red-100 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-full dark:bg-red-900 dark:text-red-300 w-28">
                <span class="w-2 h-2 mr-1 bg-red-500 rounded-full"></span>
                Desconectado
            </span>
        </div>
    }



</div>


@code {


    async void Confirm(int id)
    {
        var x = await LIN.Access.Communication.Controllers.Conversations.IsOnline(id);
        isOnline = x.Model;
        StateHasChanged();
    }
}