@page "/settings"

@inject IJSRuntime js
@inject NavigationManager nav


@if(! Access.Developer.Session.IsAccountOpen)
{
    nav.NavigateTo("/login");
    return;
}

<NavBar />







<Options Name="dropGenero" OnSuccess="StateHasChanged" />

<VisibilityOptions Name="dropVisibilidad" OnSuccess="StateHasChanged" />














@code {


    

    bool loadEmail = false;
    List<EmailModel> Emails = new();

    private string Img64
    {
        get
        {
            return Convert.ToBase64String(LIN.Access.Developer.Session.Instance.Account.Perfil);
        }
    }
}


<AskDeleteAccount Message="@("¿Seguro desea su cuenta, esta accion no es reversible?")" Key="AK" OnYes="Delete" />


@code {
    private int Count { get; set; } = 0;

    protected override async Task OnInitializedAsync()
    {

      //  var count = await LIN.Access.Controllers.Contact.Count(LIN.Access.Developer.Session.Instance.Token);
    //    Count = count.Model;

        LoadEmails();

        await base.OnInitializedAsync();
    }


    async void LoadEmails()
    {
        loadEmail = false;
        base.StateHasChanged();

        var token = LIN.Access.Developer.Session.Instance.AccountToken;
        var mails = await Access.Auth.Controllers.Mail.ReadAll(token);

        loadEmail = true;
        base.StateHasChanged();
       Emails = mails.Models;
        base.StateHasChanged();
    }

}


<ChangePassword></ChangePassword>

<div class="layoutMain">


    <h1 style="font-size: 35px" class="gilroy-bold">Mi Cuenta</h1>


    <!--Info Personal-->
    <div class="bg-white w-full p-5 ring-1 ring-gray-300 rounded-lg mt-5 flex flex-col">
        
        <label class="text-xl gilroy-bold">Informacion personal</label>
        <label class="text-sm">Es posible que otros usuarios puedan ver parte de la información al usar los servicios de LIN.</label>

        <!--Info basica-->
        <div class="ring-1 ring-gray-300 rounded-lg p-5 mt-5 flex flex-row">

            <img class=" w-8 h-8 p-1 rounded-full ring-2 ring-gray-300 dark:ring-gray-500" src="data:image/png;base64,@Img64" alt="Bordered avatar">

            <div class="flex flex-col ml-2">
                <label class="gilroy-bold text-sm text-gray-700">@LIN.Access.Developer.Session.Instance.Account.Nombre</label>
                <label class="gilroy text-xs text-gray-500 -mt-1">@@@LIN.Access.Developer.Session.Instance.Account.Usuario</label>
            </div>

        </div>


        <!-- Genero -->
        <div class="ring-1 ring-gray-300 rounded-lg p-5 mt-3 flex flex-row">

            @if(LIN.Access.Developer.Session.Instance.Account.Genero == Genders.Female)
            {
                <img class=" w-8 h-8" src="./img/femenino.png" alt="Bordered avatar">
            }
            else if (LIN.Access.Developer.Session.Instance.Account.Genero == Genders.Male)
            {
                <img class=" w-8 h-8" src="./img/masculino.png" alt="Bordered avatar">
            }
            else
            {
                <img class=" w-8 h-8" src="./img/malefemale.png" alt="Bordered avatar">
            }
           

            <div class="flex flex-col ml-2">
                <label class="gilroy-bold text-sm text-gray-700">Genero</label>

                @if (LIN.Access.Developer.Session.Instance.Account.Genero == Genders.Female)
                {
                    <label @onclick="UpdateGenero" id="lbOption" class="gilroy text-xs text-gray-500 -mt-1 hover:text-rose-600">Femenino</label>
                }
                else if (LIN.Access.Developer.Session.Instance.Account.Genero == Genders.Male)
                {
                    <label @onclick="UpdateGenero" id="lbOption" class="gilroy text-xs text-gray-500 -mt-1 hover:text-blue-600">Masculino</label>
                }
                else
                {
                    <label @onclick="UpdateGenero" id="lbOption" class="gilroy text-xs text-gray-500 -mt-1 hover:text-green-600">Prefiero no decirlo</label>
                }

               
            </div>

        </div>


        <!-- Visibilidad -->
        <div class="ring-1 ring-gray-300 rounded-lg p-5 mt-3 flex flex-row">

            @if (LIN.Access.Developer.Session.Instance.Account.Visibilidad == AccountVisibility.Visible)
            {
                <img class=" w-8 h-8" src="./img/visible.png" alt="Bordered avatar">
            }
            else if (LIN.Access.Developer.Session.Instance.Account.Visibilidad == AccountVisibility.Hidden)
            {
                <img class=" w-8 h-8" src="./img/hidden.png" alt="Bordered avatar">
            }
           


            <div class="flex flex-col ml-2">
                <label class="gilroy-bold text-sm text-gray-700">Visibilidad</label>

                
                @if (LIN.Access.Developer.Session.Instance.Account.Visibilidad == AccountVisibility.Visible)
                {
                    <label @onclick="UpdateVisibility" id="lbOption2" class="gilroy text-xs text-gray-500 -mt-1 hover:text-slate-800">Visible</label>
                }
                else if (LIN.Access.Developer.Session.Instance.Account.Visibilidad == AccountVisibility.Hidden)
                {
                    <label @onclick="UpdateVisibility" id="lbOption2" class="gilroy text-xs text-gray-500 -mt-1 hover:text-slate-800">Oculto</label>
                }
                else
                {
                    <label @onclick="UpdateVisibility" id="lbOption2" class="gilroy text-xs text-gray-500 -mt-1 hover:text-slate-800">Indefinido</label>
                }


            </div>

        </div>


        @if (LIN.Access.Developer.Session.Instance.Account.OrganizationAccess != null)
        {
            <!-- Organización -->
            <div class="ring-1 ring-gray-300 rounded-lg p-5 mt-3 flex flex-row">

                <img class=" w-8 h-8" src="./img/empresa.png" alt="Bordered avatar">

                <div class="flex flex-col ml-2">

                    <label class="gilroy-bold text-sm text-gray-700">Organización</label>
                    <label @onclick="GoContacts" class="gilroy text-xs text-gray-500 -mt-1 hover:text-blue-600">@(LIN.Access.Developer.Session.Instance.Account.OrganizationAccess.Organization.Name)</label>

                </div>

            </div>
        }

    </div>


    <!--Info Seguridad-->
    <div class="bg-white w-full p-5 ring-1 ring-gray-300 rounded-lg mt-5 flex flex-col ">

        <label class="text-xl gilroy-bold">Información de seguridad</label>


         <div class="flex mt-4">

            <img @onclick="AddM" class="h-5 w-5 hover:animate-pulse" src="./img/add.png" />
            <img @onclick="LoadEmails" class="h-5 w-5 hover:animate-pulse ml-3" src="./img/actualizar.png" />

        </div>

       @if(!loadEmail)
        {
            <div class="flex items-center justify-center mt-4 bg-white h-44 w-full rounded-lg ring-1 ring-gray-300">
               <CircleLoader />
            </div>
        }
        else if (Emails.Count == 0)
        {
            <div class="flex items-center justify-center mt-4 bg-white h-44 w-full rounded-lg ring-1 ring-gray-300">
                <img class="h-6 w-6" src="./img/email.png" />
                <label class="gilroy-bold ml-2">No tienes ningun email asociado</label>
            </div>
        }
        else
        {
            <div style="" class="relative sm:rounded-lg mt-3">

                <label class="text-sm mt-3">Direcciones de correo</label>

                @foreach (var email in Emails)
                {
                    <EmailComponent Modelo="email" />
                }


            </div>
        }



        <!-- Password -->
        <div class="ring-1 ring-gray-300 rounded-lg p-5 mt-5 flex flex-row">

            <img class=" w-8 h-8" src="./img/candado.png" alt="Bordered avatar">

            <div class="flex flex-col ml-2">

                <label class="gilroy-bold text-sm text-gray-700">Contraseña</label>

                <label @onclick="OpenModal" class="gilroy text-xs text-gray-500 -mt-1 hover:text-blue-500">Cambiar contraseña</label>

            </div>

        </div>


        <button @onclick="Open" type="button" class="focus:outline-none text-white bg-red-700 hover:bg-red-800 focus:ring-4 focus:ring-red-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 w-52 mt-5">Eliminar cuenta</button>


    </div>



</div>

@code {



    void AddM()
    {

        AddEmail.Show();

    }


   async void UpdateGenero()
    {
        await Options.Show("dropGenero", "lbOption", LIN.Access.Developer.Session.Instance.Account.Genero);
    }

    async void UpdateVisibility()
    {
        await VisibilityOptions.Show("dropVisibilidad", "lbOption2", LIN.Access.Developer.Session.Instance.Account.Visibilidad);
    }



    async void Delete(string password)
    {
        var response = await LIN.Access.Auth.Controllers.Account.Disable(LIN.Access.Developer.Session.Instance.Informacion.ID, password);

        switch (response.Response)
        {
            case Responses.Success:
                nav.NavigateTo("/logout");
                break;

            case Responses.InvalidPassword:
                ModalError.Show("La contraseña es incorrecta.");
                break;

            default:
                ModalError.Show("Hubo un error.");
                break;

        }

    }

    void Open()
    {
        App.JS.InvokeVoidAsync("ShowModal", $"ask-delete-modal2-AK", $"ask2-close-btn-AK", $"ask2-close-btn2-AK", $"ask2-close-btn3-AK");
    }



    void GoContacts()
    {
        nav.NavigateTo("/contactos");
    }

    void OpenModal()
    {
        js.InvokeVoidAsync("ShowModal", "changepass-modal", "btn-close-pass", "auto1-close");
    }


}