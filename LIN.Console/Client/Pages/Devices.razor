@page "/devices"
@inject NavigationManager nav

<NavBar Tablero="true" />

@code {

    List<DeviceModel> DevicesList = new();

    bool load = false;


}

@{
    if (Online.StaticHub.Hub != null)
    {
        Online.StaticHub.Hub.OnDeviceJoins += R;
        Online.StaticHub.Hub.OnDeviceLeaves += R;
    }
}


@code {


    public void R(object obj, string mp)
    {
        var count = DevicesList.RemoveAll(T => T.ID == mp);

        base.StateHasChanged();
    }


    public void R(object obj, DeviceModel mp)
    {
        var count = DevicesList.Where(T => T.ID == mp.ID).Count();

        if (count == 0)
        {
            DevicesList.Add(mp);
            base.StateHasChanged();
        }

    }

}



@if (!Access.Developer.Session.IsAccountOpen)
{
    nav.NavigateTo("/login");
    return;
}





<div class="layoutMain">

    <h1 style="font-size: 35px" class="gilroy-bold">Dispositivos</h1>

    <p class="ml-auto text-xs text-gray-500 ">Dispositivos asociados a tu cuenta <a href="/transacciones" class="text-blue-600 hover:underline">LIN</a>.</p>


    @if (!load)
    {
        <div style="box-shadow: rgba(0, 0, 0, 0.02) 0px 4px 12px;" class="flex items-center justify-center mt-7 bg-white h-44 h-20 w-full rounded-lg">
            <CircleLoader />
        </div>
    }
    else
    {
        @if (DevicesList.Count == 0)
        {
            <div style="box-shadow: rgba(0, 0, 0, 0.02) 0px 4px 12px;" class="flex items-center justify-center mt-7 bg-white h-44 w-full rounded-lg">
                <img class="h-6 w-6" src="./img/cactus.png" />
                <label class="gilroy-bold ml-1">No tienes ningun dispositivo</label>
            </div>
        }
        else
        {
            <div style="margin-left: 2px" class="relative sm:rounded-lg mt-5 mb-5">

                <label @onclick="Load" style="font-size: 18px;" class="gilroy-bold mb-3 mt-3">Conectados</label>

                @foreach (var project in DevicesList)
                {
                    <DeviceComponent Modelo="project" />
                }



            </div>
        }
    }










</div>

@code {


    /// <summary>
    /// Metodo de inicio
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        // Obtiene los proyectos
        if (!load)
            await Load();

        // base
        await base.OnInitializedAsync();

    }


    /// <summary>
    /// Carga la lista de proyectos
    /// </summary>
    public async Task Load()
    {

        load = false;
        base.StateHasChanged();

        var sesion = LIN.Access.Developer.Session.Instance;

       // Obtiene los dispositivos
        var result = await LIN.Access.Auth.Controllers.Devices.ReadAll(sesion.AccountToken);


        // Evalua el resultado
        if (result.Response == Responses.Success)
        {
            load = true;
            DevicesList = result.Models;
            base.StateHasChanged();
        }

    }
}