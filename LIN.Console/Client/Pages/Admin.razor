<!--Dependencias-->
@inject IJSRuntime JSRuntime
@inject NavigationManager nav

@page "/admincenter"


<NavBar Tablero="true" />


<!-- Propiedades -->
@code{


    private List<LIN.Shared.Models.UserDataModel> Modelos = new();

    private string TxtUser { get; set; } = "";


}


<!-- Estilos -->
<link href="./css/Index.css" rel="stylesheet" />



<!--Mensaje-->
@if (LIN.Access.Developer.Session.Instance.Account.Rol == AccountRoles.Admin)
{
    <Alert Message="Administrador de platforma LIN Services" Class="success" Svg="0" />
}
else
{
    nav.NavigateTo("/");
}




<div class="layoutMain">


    <div >
        <label for="default-search" class="mb-2 text-sm font-medium text-gray-900 sr-only">Buscar</label>
        <div class="relative">
            <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
                <svg aria-hidden="true" class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path></svg>
            </div>
            <input @bind="TxtUser" type="search" id="default-search" class="block w-full p-4 pl-10 text-sm text-gray-900 border border-gray-300 rounded-lg bg-gray-50 focus:ring-blue-500 focus:border-blue-500" placeholder="Buscar usuario de LIN ID" required>
            <button @onclick="GoToSearh" type="submit" class="text-white absolute right-2.5 bottom-2.5 bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg text-sm px-4 py-2 ">Buscar</button>
        </div>
    </div>


    <div class="flex flex-col mt-5 gap-y-3">
        @foreach (var model in Modelos)
        {
            <UserComponent Modelo="model" />
        }
    </div>
 

</div>






<!-- Ciclo de vida -->
@code {



    /// <summary>
    /// Metodo de inicio
    /// </summary>
    protected override async Task OnInitializedAsync()
    {


        
        // base
        await base.OnInitializedAsync();

    }


 


}











@code{


    private async void GoToSearh()
    {

        var dd = await LIN.Access.Controllers.User.GetAll(TxtUser, LIN.Access.Developer.Session.Instance.Token);

        if (dd.Response != Responses.Success)
            return;

            Modelos = dd.Models;

            base.StateHasChanged();
    }


}
