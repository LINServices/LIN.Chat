@inject IJSRuntime JSRuntime;
@inject NavigationManager nav;

@code
{
    [Parameter]
    public EmailModel Modelo { get; set; }


    [Parameter]
    public EventCallback<MouseEventArgs> OnDelete { get; set; }

    string Message = "";

    private string state = "";

}



<AskDeleteAccount Message="@("¿Seguro desea eliminar el email '"+Modelo.Email+"'?")" Key="@Modelo.ID.ToString()" OnYes="Delete" />



<style>
    .div-shadow {
        box-shadow: rgba(0, 0, 0, 0.05) 0px 6px 24px 0px, rgba(0, 0, 0, 0.08) 0px 0px 0px 1px;
        border-radius: 5px;
        background-color: white;
    }

        .div-shadow:hover {
            box-shadow: rgba(63, 155, 229, 0.2) 0px 6px 24px 0px, rgba(63, 155, 229, 0.2) 0px 0px 0px 1px;
        }

</style>




<div @onclick="GotoProj" style="padding: 10px;" class="horizontal gilroy mt-2 div-shadow">

    <div class="flex flex-row items-center">

        <img class="ml-2" src="./img/email.png" style="height: 25px; width: 25px;" />

        <div class="flex flex-col ml-2">

            <div class="flex flex-row items-center">
                <label style="margin-bottom: 2px;" class="gilroy-bold text-sm text-gray-700">@Modelo.Email</label>

                @if (Modelo.IsDefault)
                {
                    <img class="ml-2 w-3 h-3" src="./img/seguridad.png" />
                  
                }

            </div>
            


            @if(Modelo.Status == EmailStatus.Verified)
            {

                <Dropdown Name="@Modelo.ID.ToString()">

                    <img class="h-5 w-5" src="./img/email.png" />
                    <label>Email</label>
                    <label class="text-xs text-gray-600">@Modelo.Email</label>

                    <span @onclick="OpenDr" class="inline-flex mt-1 w-28 items-center justify-center bg-green-100 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-lg">
                        <span class="w-2 h-2 mr-1 bg-green-500 rounded-full"></span>
                        Verficado
                    </span>

                    @if(!Modelo.IsDefault)
                    {
                        <button type="button" class="px-3 py-2 text-xs font-medium text-center text-white bg-slate-700 rounded-lg hover:bg-slate-800 focus:ring-4 focus:outline-none focus:ring-slate-300 grid-grow w-full mt-3">Convertir en email defecto</button>

                    }

                </Dropdown>


                <span id="draction-@Modelo.ID" @onclick="OpenDr" class="inline-flex w-28 items-center bg-green-100 text-green-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-lg">
                    <span class="w-2 h-2 mr-1 bg-green-500 rounded-full"></span>
                    Verficado
                </span>
            }
            else
            {

                <Dropdown Name="@Modelo.ID.ToString()">

                    <img class="h-5 w-5" src="./img/email.png" />
                    <label>Email</label>
                    <label class="text-xs text-gray-600">@Modelo.Email</label>

                    <span class="inline-flex w-28 mt-1 items-center justify-center mt-1 bg-red-100 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-lg">
                        <span class="w-2 h-2 mr-1 bg-red-500 rounded-full"></span>
                        Por verificar
                    </span>

                    <button @onclick="Resend" id="ButtonCL-@Modelo.ID" type="button" class="px-3 py-2 text-xs font-medium text-center text-white bg-slate-700 rounded-lg hover:bg-slate-800 focus:ring-4 focus:outline-none focus:ring-slate-300 grid-grow w-full mt-3">Reenviar mail</button>

                </Dropdown>





                <span @onclick="OpenDr" id="draction-@Modelo.ID" class="inline-flex w-28 items-center bg-red-100 text-red-800 text-xs font-medium mr-2 px-2.5 py-0.5 rounded-lg">
                    <span class="w-2 h-2 mr-1 bg-red-500 rounded-full"></span>
                    Por verificar
                </span>
            }
            
         
        </div>

        <div @onclick:stopPropagation="true" class="ml-auto flex-shrink-0 justify-center items-center mt-1 mr-2">

            <DeleteButton OnPress="DeleteAsk" />

        </div>

       

    </div>

</div>


@code{


    void OpenDr()
    {
        Dropdown.Show(Modelo.ID.ToString(), $"draction-{Modelo.ID}", $"ButtonCL-{Modelo.ID}");
    }
}



























@code
{
    async void Resend()
    {
        var res = await LIN.Access.Controllers.User.ResendMail(Modelo.ID, LIN.Access.Developer.Session.Instance.Token);
     
    }

    async void DeleteAsk()
    {

        await JSRuntime.InvokeVoidAsync("ShowModal", $"ask-delete-modal-{Modelo.ID}", $"ask-close-btn-{Modelo.ID}", $"ask-close-btn2-{Modelo.ID}", $"ask-close-btn3-{Modelo.ID}");

    }

    async void Delete()
    {
        var response  =  await  LIN.Access.Developer.Controllers.Project.Delete(Modelo.ID, LIN.Access.Developer.Session.Instance.Token);

        if (response.Response == Responses.Success)
        {
            Pages.Index.AreProjectLoaded = false;
            Online.StaticHub.NotificateAccount("cl.UpdateProjects()");
            await OnDelete.InvokeAsync();
        }
        else
        {
            ModalError.Show($"No se pudo eliminar el proyecto '{Modelo.Email}'");
        }

    }


     void GotoProj()
    {
    }


}
