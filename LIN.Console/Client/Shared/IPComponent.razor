@inject IJSRuntime JSRuntime;
@inject NavigationManager nav;

@code {

    [Parameter]
    public LIN.Developer.Types.Models.FirewallRuleDataModel IP { get; set; }

    [Parameter]
    public EventCallback<MouseEventArgs> OnDelete { get; set; }


}


<AskDelete Message="@("¿Seguro desea eliminar la regla '" + IP.RuleName + "'?")" Key="@IP.ID.ToString()" OnYes="Delete" />


<style>
    .div-shadow {
        box-shadow: rgba(0, 0, 0, 0.03) 0px 6px 24px 0px, rgba(0, 0, 0, 0.05) 0px 0px 0px 1px;
        border-radius: 6px;
        background-color: white;
    }

        .div-shadow:hover {
            box-shadow: rgba(63, 131, 248, 0.2) 0px 6px 24px 0px, rgba(63, 131, 248, 0.2) 0px 0px 0px 1px;
        }

</style>




<div style="padding: 12px;" class="horizontal gilroy mt-2 div-shadow">

    <div class="flex flex-row items-center">

        <img src="./img/web.png" style="height: 30px; width: 30px;" />

        <div class="flex flex-col ml-2">

            <h1 style="margin-top: -1px;" class="gilroy-bold">@IP.RuleName</h1>
            <h4 style="margin-top: -5px; font-size: 11px;">@IP.IPInicio <span>●</span> @IP.IPFinal</h4>

        </div>

        <div @onclick:stopPropagation="true" class="ml-auto flex justify-center items-center mr-2">

            <DeleteButton OnPress="DeleteAsk" />

        </div>



    </div>

</div>











@code
{


    async void DeleteAsk()
    {
        await JSRuntime.InvokeVoidAsync("ShowModal", "ask-delete-modal-" + IP.ID, $"ask-close-btn-{IP.ID}", $"ask-close-btn2-{IP.ID}", $"ask-close-btn3-{IP.ID}");

    }

    async void Delete()
    {
        await LIN.Access.Developer.Controllers.FirewallRule.Delete(IP.ID, LIN.Access.Developer.Sesion.Instance.Token);
        await OnDelete.InvokeAsync();
    }



}

