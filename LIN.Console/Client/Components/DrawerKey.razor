@inject IJSRuntime JS


@code {


    [Parameter]
    [Required]
    public int ProjectID { get; set; }


    [Parameter]
    public EventCallback<MouseEventArgs> OnSuccessCreate { get; set; }


    public string KeyName { get; set; } = "";
}





<!-- drawer component -->
<div id="drawerKey" class="fixed top-0 left-0 z-40 h-screen p-4 overflow-y-auto transition-transform -translate-x-full bg-white w-80  " tabindex="-1" aria-labelledby="drawer-form-label" aria-hidden="true">



    <h5 id="drawer-label" class="inline-flex items-center mb-6 text-base font-semibold text-gray-500 uppercase ">
        <svg style="margin-right: 7px; margin-bottom: 1px" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-circle-square" viewBox="0 0 16 16">
            <path d="M0 6a6 6 0 1 1 12 0A6 6 0 0 1 0 6z" />
            <path d="M12.93 5h1.57a.5.5 0 0 1 .5.5v9a.5.5 0 0 1-.5.5h-9a.5.5 0 0 1-.5-.5v-1.57a6.953 6.953 0 0 1-1-.22v1.79A1.5 1.5 0 0 0 5.5 16h9a1.5 1.5 0 0 0 1.5-1.5v-9A1.5 1.5 0 0 0 14.5 4h-1.79c.097.324.17.658.22 1z" />
        </svg>
        Nueva llave
    </h5>


    <button id="btnClose" type="button" class="text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 absolute top-2.5 right-2.5 inline-flex items-center  ">
        <svg aria-hidden="true" class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path></svg>
        <span class="sr-only">Close menu</span>
    </button>
    <div class="mb-6">


        <div class="mb-6">
            <label for="title" class="block mb-2 text-sm font-medium text-gray-900 ">Alias</label>
            <input autocomplete="off" @bind="KeyName" type="text" id="title" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5      " placeholder="Alias de la llave" required>
        </div>
        <div class="mb-6">
            <label for="description" class="block mb-2 text-sm font-medium text-gray-900 ">Descripcion</label>
            <textarea autocomplete="off"  id="description" rows="4" class="block p-2.5 w-full text-sm text-gray-900 bg-gray-50 rounded-lg border border-gray-300 focus:ring-blue-500 focus:border-blue-500      " placeholder="Una descripcion del uso de esta llave"></textarea>
        </div>


        <button id="btnClose1" @onclick="CrearKey" class="text-white justify-center flex items-center bg-[#050708] hover:bg-[#050708]/90 w-full focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-5 py-2.5 mr-2 mb-2 ">
            <svg style="margin-right: 6px" xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor" class="bi bi-plus-circle-fill" viewBox="0 0 16 16">
                <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM8.5 4.5a.5.5 0 0 0-1 0v3h-3a.5.5 0 0 0 0 1h3v3a.5.5 0 0 0 1 0v-3h3a.5.5 0 0 0 0-1h-3v-3z" />
            </svg>
            Crear llave
        </button>
    </div>
</div>



@code {
    /// <summary>
    /// Crea una nueva llave
    /// </summary>
    async void CrearKey()
    {


        if (KeyName.Trim() == string.Empty)
            KeyName = "Unamed key";


        // Modelo de la llave
        var key = new ApiKeyDataModel()
            {
                ProjectID = this.ProjectID,
                Nombre = KeyName,
                Status = LIN.Types.Developer.Enumerations.ApiKeyStatus.Actived
            };

        KeyName = "";

        var token = LIN.Access.Developer.Session.Instance.Token;
        // Envia a la base de datos
        var response = await LIN.Access.Developer.Controllers.ApiKey.Create(key, token);

        // Evaluacion
        if (response.Response != Responses.Success)
        {
            return;
        }

        await OnSuccessCreate.InvokeAsync();


    }
}